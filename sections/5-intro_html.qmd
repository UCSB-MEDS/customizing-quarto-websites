---
format: 
  revealjs:
    slide-number: true
    # preview-links: true
    code-link: true
    highlight-style: a11y
    chalkboard: true
    # self-contained: true
    # scrollable: true
    theme: 
      - meds-slides-styles.scss
---

##  {#light-intro-html data-menu-title="Light intro to HTML" background="#047C90"}

<div class="page-center">
<div class="custom-subtitle">A *light* introduction to HTML `r fontawesome::fa("html5", fill = "#d2e3f3", a11y = "sem")`</div>
</div>

---

##  {#html-elements1 data-menu-title="HTML elements"}

[HTML consists of a series of elements]{.slide-title}

<hr>

[Elements](https://www.w3schools.com/html/html_elements.asp) comprise **start tags** and **end tags** that render some form of content in a particular way.

::: {.center-text}
[**The basic anatomy of an HTML element:**]{.teal-text}
:::

```{r}
#| eval: true 
#| echo: false
#| fig-align: "center"
#| out-width: "90%" 
knitr::include_graphics("images/html_element.png")
```

<br>

::: {.center-text}
In Markdown syntax, this HTML element would be written as, `# Welcome to your website customization workshop`
:::

---

##  {#html-elements2 data-menu-title="Commonly used HTML tags"}

[Commonly used HTML tags]{.slide-title}

<hr>


::: {.center-text .body-text-m}
Browse a complete [list of HTML tags](https://www.w3schools.com/tags/default.asp).
:::

<br>

| Tag                 | What it does                                                 |
|---------------------|--------------------------------------------------------------|
| `<div></div>`       | defines a division or section in an HTML document            |
| `<h1></h1>`         | create a first-level heading (largest)                       |
| `<h6></h6>`         | create a sixth-level heading (smallest)                      |
| `<p></p>`           | begin a new paragraph                                        |
| `<strong></strong>` | bold text                                                    |
| `<em></em>`         | italicized text                                              |
| `<img></img>`       | present an image                                             |
| `<a></a>`           | define a hyperlink                                           |
| `<br>`              | add a line break (empty element)                             |
| `<span></span>`     | an inline container used to markup part of a text or document|

::: {.footer}
**Note:** Some HTML elements have no content (e.g. the `<br>`, or "break" element) -- these are called *empty* elements and do not have an end tag.
:::

---

##  {#nested-html-elements data-menu-title="Nested HTML elements"}

[HTML elements can be *nested*]{.slide-title}

<hr>

Remember to close out tags from the inside-out to avoid unexpected renderings.

<br>

::: {.center-text .teal-text}
**Nested HTML elements:**
:::

```{r}
#| eval: true 
#| echo: false
#| fig-align: "center"
#| out-width: "90%" 
knitr::include_graphics("images/nested_html_elements.png")
```

<br>

::: {.center-text}
In Markdown syntax, this HTML element would be written as: <br> `# Welcome to your **website customization** workshop`
:::

<br>

::: {.footer}
[**IMPORTANT: Take extra care to never skip (or incorrectly type) an end tag!** ]{.teal-text}
Some elements will still display correctly if you forget an end tag, but you cannot rely on this. Forgotten end tags will cause you headaches as you try troubleshoot unexpected results and errors `r fontawesome::fa("grin-beam-sweat", fill = "#222222", a11y = "sem")`.
:::

<!-- --- -->

<!-- ##  {#html-attributes data-menu-title="HTML attributes"} -->

<!-- [HTML attributes can be used for targeted styling]{.slide-title3} -->

<!-- <hr> -->

<!-- [Attributes](https://www.w3schools.com/html/html_attributes.asp) provide extra information about elements. They are always **specified in the start tag** and usually come in **value/name pairs** (e.g. `attributeName="attributeValue"`). -->

<!-- <br> -->

<!-- Attributes can be used for **targeted styling with CSS** (e.g. **`class`** or **`id`** attributes) -- more on this soon. -->

<!-- <br> -->

```{r}
#| eval: true 
#| echo: false
#| fig-align: "center"
#| out-width: "90%" 
# knitr::include_graphics("images/html_attribute.png")
```

---

##  {#write-html1 data-menu-title="Write HTML 1"}

[Let's take a look at some HTML]{.slide-title}

<hr>

<br>
<br>

::: {.center-text}
*You can use any text editor to write HTML, but the following steps assume you're working in RStudio. You can continue to work on your branch.*
:::

<br>

[**0.**]{.teal-text} I'm going to create a new subdirectory in my repo's root directory called, `DELETE-LATER/`. We'll save the following practice files to this folder, then delete it after (these files are purely for demonstration and aren't needed for your website). To do so, click on the **folder button** in the **Files** pane to add your new subdirectory.

<br>

[**1.**]{.teal-text} Add a new file named `practice.html` to your new folder using either the `touch` command or the **Blank File** > **Text File** option.

::: {.footer}
**Reminder:** You can delete the `DELETE-LATER/` subdirectory after the next few exercises. These files will not be incorporated into our website.
:::

---

##  {#write-html2 data-menu-title="Write HTML 2"}

[Let's take a look at some HTML]{.slide-title}

<hr>

<br>

[**2.**]{.teal-text} Type or copy / paste the following HTML into your `practice.html` file:

```{html filename="~/DELETE-LATER/practice.html"}
#| eval: false
#| echo: true
<!DOCTYPE html> <!-- All HTML docs start with a doc type declaration-->
<html> <!-- This tag represents the root of the HTML doc -->
<head>
 <!-- Write any metadata about the HTML doc here (inluding the link to an external CSS file) -->
</head>
<body> 
  <!-- Write all the contents of the HTML doc here -->
  <h1>Here is my level one header</h1>
  <p>Here is my first paragraph</p>
  <p>Here is my second paragraph, where you can read more about <a href="https://bren.ucsb.edu/masters-programs/master-environmental-data-science">MEDS</a>.</p>
  <p>This is very important text!</p>
</body>
</html>
```

---

##  {#render-html data-menu-title="Render HTML"}

[The resulting rendered HTML should look like this]{.slide-title2}

<hr>

[**3.**]{.teal-text} Click the **Preview** button to render your HTML: 

```{r}
#| eval: true 
#| echo: false
#| fig-align: "center"
#| out-width: "65%" 
knitr::include_graphics("images/rendered-practice-html.png")
```

---

##  {#write-md data-menu-title="Write Markdown"}

[Markdown makes it easy to "write" HTML]{.slide-title}

<hr>

<br>

Quarto (`.qmd`) files allow us to write markdown, then *Render* that markdown as HTML (we can also write HTML directly in `.qmd` files). Let's practice that together now:

<br>

[**1.**]{.teal-text} Add a new file named, `practice.qmd`, inside `DELETE-LATER/` using either the `touch` command or the **Blank File** > **Quarto Doc...** option.

<br>

[**2.**]{.teal-text} Type or copy / paste the following into your `practice.qmd` file:

```{.md filename="~/DELETE-LATER/practice.qmd"}
# Here is my level one header

Here is my first paragraph

Here is my second paragraph, where you can read more about [MEDS](https://bren.ucsb.edu/masters-programs/master-environmental-data-science).

This is very important text!
```

---

##  {#render-md data-menu-title="Render Markdown"}

[The resulting rendered Markdown should look like this]{.slide-title3}

<hr>

<br>

[**3.**]{.teal-text} Click the **Render** button to render the markdown as HTML.

```{r}
#| eval: true 
#| echo: false
#| fig-align: "center"
#| out-width: "55%" 
knitr::include_graphics("images/rendered-practice-markdown.png")
```

::: {.center-text}
***Note:** Because we are in our website repo, the resulting file will be rendered as a web page and styled according to our `styles.scss` stylesheet.*
:::

